{{#each allMethods}}{{getUriList resource}}{{/each}}

def wrongType(var,typ):
    try:
        if typ=='integer':
            int(var)
        elif typ=='number':
            float(var)
            pass
        return False
    except:
        return True
    pass

true,false=True,False

from rpc_impl import *

def match(x,y):
    return x == y

def app(environ, start_response):
    start_response("200 OK", [])
    if False:
      pass
{{#each allMethods}}
    elif (environ['REQUEST_METHOD']=='{{method}}'.upper()  and
            match(environ['PATH_INFO'],r'{{fullPath resource}}')):

{{#each resource.uriList}}
        {{displayName}} = 1
        if bool({{required}}) and {{displayName}} is None:
            raise "MISSING"	
        if wrongType({{displayName}},'{{type}}'):
            raise "WRONGTYPE"
{{/each}}

{{#each queryParameters}}
        {{displayName}} = 1
        if bool({{required}}) and {{displayName}} is None:
            raise "MISSING"	
        if wrongType({{displayName}},'{{type}}'):
            raise "WRONGTYPE"
{{/each}}

{{#each body}}
{{#each formParameters}}
        {{displayName}} = 1
        if bool({{required}}) and {{displayName}} is None:
            raise "MISSING"	
        if wrongType({{displayName}},'{{type}}'):
            raise "WRONGTYPE"
{{/each}}
{{/each}}

        return rpc{{flatPath resource}}_{{method}}(
            {{#each resource.uriList}}{{displayName}},{{/each}}#uri
            {{#each queryParameters}}{{@key}},{{/each}}#query
            {{#each body}}{{#each formParameters}}{{@key}},{{/each}}{{/each}}#form
        )
{{/each}}
    return ['OK']

if __name__ == '__main__':
    from wsgiref.simple_server import make_server
    srv = make_server('localhost', 8080, app)
    srv.serve_forever()
    pass
